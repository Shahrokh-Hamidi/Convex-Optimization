import numpy as np
import matplotlib.pyplot as plt
import scipy
import sys
import cvxpy as cp

#%matplotlib qt





A = np.array([[-0.432564811528221,	1.06676821135919,	0.815622288876143,	-2.17067449430526,	0.428183273045163,	0.623233851138494,	0.781181617878392,	1.47247993441992],
[-1.66558437823810,	0.0592814605236054,	0.711908323500893,	-0.0591878245211912,	0.895638471211752,	0.799048618147778,	0.568960645723274,	0.0557438318378432],
[0.125332306474831,	-0.0956484054836690,	1.29024975493248,	-1.01063370647425,	0.730957338429453,	0.940889940727780,	-0.821714291696256,	-1.21731745370455],
[0.287676420358549,	-0.832349463650023,	0.668600505682040,	0.614463048895481,	0.577857346330798,	-0.992091735543795,	-0.265606851332549,	-0.0412271336864321],
[-1.14647135068146,	0.294410816392640,	1.19083807424337,	0.507740785341986,	0.0403140316184403,	0.212035152165055,	-1.18777701646980,	-1.12834386432023],
[1.19091546564300,	-1.33618185793780,	-1.20245711477394,	1.69242987019052,	0.677089187597305,	0.237882072875579,	-2.20232071732344,	-1.34927754310249],
[1.18916420165210,	0.714324551818952,	-0.0197895577687705,	0.591282586924176,	0.568900205200723,	-1.00776339167827,	0.986337391002023,	-0.261101623061621],
[-0.0376332765933176,	1.62356206444627,	-0.156717298831981,	-0.643595202682526,	-0.255645415631965,	-0.742044752133604,	-0.518635066344746,	0.953465445504819],
[0.327292361408654,	-0.691775701702287,	-1.60408556200116,	0.380337251713910,	-0.377468955522361,	1.08229495315533,	0.327367564080834,	0.128644430046645],
[0.174639142820925,	0.857996672828263,	0.257304234677490,	-1.00911552434079,	-0.295887110003557,	-0.131499702945274,	0.234057012847185,	0.656467513885396],
[-0.186708577681439,	1.25400142160253,	-1.05647292808148,	-0.0195106695302893,	-1.47513450585526,	0.389880489687039,	0.0214661388790945,	-1.16781936472664],
[0.725790548293303,	-1.59372957644748,	1.41514148587234,	-0.0482207891453123,	-0.234004047656033,	0.0879871065797930,	-1.00394446674772,	-0.460605179506150],
[-0.588316543014189,	-1.44096443190102,	-0.805090404196880,	4.31918416255450e-05,	0.118444837054121,	-0.635465225479316,	-0.947146064738541,	-0.262439952838333],
[2.18318581819710,	0.571147623658178,	0.528743010962225,	-0.317859451247688,	0.314809043395056,	-0.559573302196241,	-0.374429195029166,	-1.21315206849391],
[-0.136395883086596,	-0.399885577715363,	0.219320672667622,	1.09500373878749,	1.44350824434982,	0.443653489503667,	-1.18588621380853,	-1.31943699810954],
[0.113931313520810,	0.689997375464345,	-0.921901624355539,	-1.87399025764096,	-0.350974738327742,	-0.949903798547645,	-1.05590292352369,	0.931217514995436]])


b  =np.array([0.0112448963841337,-0.645145815691170,0.805728793112376,0.231626010780437,-0.989759671682004,1.33958570061039,0.289502034538413,
              1.47891705768128,1.13802801285837,-0.684138585136340,-1.29193604496594,-0.0729262762636467,-0.330598879892764,-0.843627639154800,
              0.497769664182782,1.48849047090348])


B  = np.array([[-0.546475894767623,	0.469383119866330,	0.288807018730340,	1.95738475514751,	-0.321004692181292,	1.22744798900972,	0.485497707312810,	-1.27050020370838],
                [-0.846758163883060,	-0.903566942617776,	-0.429303004551915,	0.504542353592166,	1.23655565160192,	-0.696204800032889,	-0.00500507375553139,	-1.66360645282977],
                [-0.246336528084900,	0.0358796387294769,	0.0558011901764726,	1.86452902048530,	-0.631279656725146,	0.00752448652301445,	-0.276217859354759,	-0.703554261536755],
                [0.663024145855908,	-0.627531219966832,	-0.367873566740638,	-0.339811777414964,	-2.32521112888377,	-0.782893044378287,	1.27645247367439,	0.280880488523302],
                [-0.854197374468980,	0.535397954249106,	-0.464973367171118,	-1.13977940231323,	-1.23163653332502,	0.586938559214431,	1.86340061318454,	-0.541209329916194],
                [-1.20131481533904,	0.552883517423822,	0.370960583848952,	-0.211123483380258,	1.05564838790246,	-0.251207374568882,	-0.522559301636399,	-1.33353072973639],
                [-0.119869428057387,	-0.203690479567358,	0.728282931551495,	1.19024493625120,	-0.113223989369025,	0.480135822842601,	0.103424446937315,	1.07268626789014],
                [-0.0652940148415865,	-2.05432468055661,	2.11216016977150,	-1.11620875778561,	0.379223622685033,	0.668155034433641,	-0.807649130897181,	-0.712085452494356],
                [0.485295555916544,	0.132560731417280,	-1.35729774309675,	0.635274134747122,	0.944199726747308,	-0.0783211962734119,	0.680438583748946,	-0.0112855612306856],
                [-0.595490902619476,	1.59294070376602,	-1.02261014433421,	-0.601412126269725,	-2.12042668822421,	0.889172618412599,	-2.36458984794158,	-0.000817029195695836],
                [-0.149667743824475,	1.01841178862471,	1.03783419871876,	0.551184711824902,	-0.644678915541937,	2.30928748595239,	0.990114872049490,	-0.249436284695434],
                [-0.434751931152533,	-1.58040249930316,	-0.389799548476831,	-1.09984045471081,	-0.704301728433609,	0.524638679771098,	0.218899120881177,	0.396575318711652],
                [-0.0793302230234206,	-0.0786619193594521,	-1.38126562401984,	0.0859905932937184,	-1.01813721639907,	-0.0117873239513068,	0.261662460161402,	-0.264013354922243],
                [1.53515226612215,	-0.681656860002363,	0.315542632772365,	-2.00456332159079,	-0.182081868411385,	0.913140817761371,	1.21344449497535,	-1.66401087693059],
                [-0.606482859277266,	-1.02455305742903,	1.55324256851535,	-0.493087917659697,	1.52101323900559,	0.0559406788884020,	-0.274666986456781,	-1.02897509954380],
                [-1.34736267385024,	-1.23435347798426,	0.707893884632476,	0.462048011799193,	-0.0384387638867116,	-1.10706989482601,	-0.133134450813529,	0.243094700224565]])





def Form_I():
    
    x = cp.Variable(n)
    
    constr = []
    
    constr += [x >= 0]

    cost = cp.matrix_frac(A@x + b, np.eye(m) + (B@cp.diag(x))@B.T)
    prob = cp.Problem(cp.Minimize(cost), constr) 
    prob.solve(verbose = False)
    
    
    x = x.value
    print(f'Form_I Objective : {cost.value}')




def Form_II():

    x = cp.Variable(n)
    Y = cp.Variable((n,n))
    
    constr = []
    
    constr += [x >= 0]
    constr += [Y == cp.diag(x)]
    
    cost = cp.matrix_frac(A@x + b, np.eye(m) + (B@Y)@B.T)
    prob = cp.Problem(cp.Minimize(cost), constr) 
    prob.solve(verbose = False)
    
    
    x = x.value
    print(f'Form_II Objective : {cost.value}')


def Form_III():

    x = cp.Variable(n)
    v = cp.Variable(m)
    w = cp.Variable(n)

    constr = []
    
    constr += [x >= 0]
    constr += [v + B@w == A@x + b]
    
    cost = cp.sum_squares(v) + cp.matrix_frac(w, cp.diag(x))
    prob = cp.Problem(cp.Minimize(cost), constr) 
    prob.solve(verbose = False)
    
    
    x = x.value
    print(f'Form_II Objective : {cost.value}')



def Form_IV():

    x = cp.Variable(n)
    v = cp.Variable(m)
    w = cp.Variable(n)
    Y = cp.Variable((n,n))

    
    constr = []
    
    constr += [x >= 0]
    constr += [v + B@w == A@x + b]
    constr += [Y == cp.diag(x)]
    cost = cp.sum_squares(v) + cp.matrix_frac(w, Y)
    prob = cp.Problem(cp.Minimize(cost), constr) 
    prob.solve(verbose = False)
    
    
    x = x.value
    print(f'Form_II Objective : {cost.value}')
    

m, n = A.shape

Form_I()
Form_II()
Form_III()
Form_IV()